generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model Utilisateur {
    idUtilisateur  Int            @id @default(autoincrement())
    nom            String         @db.VarChar(500)
    prenom         String         @db.VarChar(500)
    dateNaissance  String         @db.VarChar(500)
    numero         String         @unique @db.VarChar(500)
    email          String         @unique @db.VarChar(500)
    pseudo         String         @unique @db.VarChar(500)
    motDePasse     String         @db.VarChar(500)
    estBotaniste   Boolean        @default(false)
    plantes        Plante[]
    conseils       Conseil[]
    gardiennages   Gardiennage[]
    conversations  Conversation[] @relation("ConversationMembre1")
    conversations2 Conversation[] @relation("ConversationMembre2")
    messages       Message[]
}

model Plante {
    idPlante    Int     @id @default(autoincrement())
    description String
    nom         String  @db.VarChar(50)
    adresse     String  @db.VarChar(50)
    photoUrl    String? @db.VarChar(255)
    idUtilisateur Int
    idEspece    Int     
    utilisateur   Utilisateur   @relation(fields: [idUtilisateur], references: [idUtilisateur])
    espece        Espece        @relation(fields: [idEspece], references: [idEspece])
    conseils      Conseil[]
    gardiennages  Gardiennage[]
}

model Espece {
    idEspece    Int         @id @default(autoincrement())
    libelle   String      @db.VarChar(50)
    plantes     Plante[]    // Relation avec le mod√®le Plante
}


model Conseil {
    idConseil     Int         @id @default(autoincrement())
    description   String
    idPlante      Int
    idUtilisateur Int
    plante        Plante      @relation(fields: [idPlante], references: [idPlante])
    utilisateur   Utilisateur @relation(fields: [idUtilisateur], references: [idUtilisateur])
}

model Gardiennage {
    idGardiennage Int           @id @unique @default(autoincrement())
    dateDebut     DateTime      @db.Date
    dateFin       DateTime      @db.Date
    idUtilisateur Int?
    idPlante      Int
    utilisateur   Utilisateur?  @relation(fields: [idUtilisateur], references: [idUtilisateur])
    plante        Plante        @relation(fields: [idPlante], references: [idPlante])
    conversation  Conversation?
}

model Conversation {
    idConversation  Int         @id @default(autoincrement())
    idUtilisateur   Int
    idUtilisateur_1 Int
    idGardiennage   Int         @unique
    membre1         Utilisateur @relation("ConversationMembre1", fields: [idUtilisateur], references: [idUtilisateur])
    membre2         Utilisateur @relation("ConversationMembre2", fields: [idUtilisateur_1], references: [idUtilisateur])
    gardiennage     Gardiennage @relation(fields: [idGardiennage], references: [idGardiennage])
    messages        Message[]
}

model Message {
    idMessage      Int          @id @default(autoincrement())
    dateEnvoi      String       @db.VarChar(50)
    contenu        String
    idUtilisateur  Int
    idConversation Int
    utilisateur    Utilisateur  @relation(fields: [idUtilisateur], references: [idUtilisateur])
    conversation   Conversation @relation(fields: [idConversation], references: [idConversation])
}
